{"version":3,"sources":["defaultimgs.js","components/TweetInFeed.js","pages/Home.js","pages/Profile.js","images/pfp1.png","images/pfp2.png","images/pfp3.png","images/pfp4.png","images/pfp5.png","pages/Settings.js","components/Sidebar.js","images/spaceshooter.jpeg","images/netflix.jpeg","images/academy.png","images/youtube.png","images/js.png","components/Rightbar.js","App.js","reportWebVitals.js","index.js"],"names":["defaultImgs","TweetInFeed","profile","useState","tweetArr","settweetArr","useMoralis","Moralis","account","useEffect","a","Tweets","Object","extend","query","Query","equalTo","find","results","console","log","message","getTweets","map","e","i","className","src","attributes","tweeterPfp","alt","tweeterUserName","slice","tweeterAcc","createdAt","toLocaleString","month","day","tweetTxt","tweetImg","fill","size","svg","reverse","Home","user","User","current","contractProcessor","useWeb3ExecuteFunction","inputFileRef","useRef","selectedFile","setSelectedFile","theFile","settheFile","tweet","settweet","avalancheTweet","data","file","File","name","saveIPFS","img","ipfs","options","contractAddress","functionName","abi","params","msgValue","Units","ETH","fetch","onSuccess","saveTweet","onError","error","newTweet","set","pfp","ethAddress","username","save","window","location","reload","label","value","type","width","onChange","target","onClick","click","ref","event","files","URL","createObjectURL","style","display","backgroundColor","Profile","banner","to","bio","Settings","selectedPFP","setSelectedPFP","inputFile","selectedImage","setselectedImage","userName","setuserName","setbio","isAuthenticated","Web3API","useMoralisWeb3Api","pfps","setPfps","pfpsDefault","pfp1","pfp2","pfp3","pfp4","pfp5","fetchNFTs","chain","address","getNFTs","mumbaiNFTs","images","result","url","JSON","parse","metadata","image","includes","replace","saveEdits","first","myDetails","labelBgColor","Sidebar","Rightbar","trends","spaceshooter","text","link","netflix","academy","js","youtube","prefixIcon","open","App","logOut","then","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.7e2ad0bf.chunk.js","sourcesContent":["export const defaultImgs = [\n  \"https://ipfs.moralis.io:2053/ipfs/QmNgA9MNWFfRaoKzBt21VghQopnKXBgVxzyGvv5qjsV4Vw/media/1\",\n  \"https://ipfs.moralis.io:2053/ipfs/QmNgA9MNWFfRaoKzBt21VghQopnKXBgVxzyGvv5qjsV4Vw/media/2\",\n];\n","import React from \"react\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport './TweetInFeed.css';\nimport { Icon } from \"web3uikit\";\nimport { useMoralis } from \"react-moralis\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\n\nconst TweetInFeed = ({profile}) => {\n\n  const [tweetArr, settweetArr] = useState();\n  const {Moralis, account } = useMoralis()\n\n  useEffect(() => {\n    async function getTweets(){\n      try{\n        const Tweets = Moralis.Object.extend(\"Tweets\")\n        const query = new Moralis.Query(Tweets)\n        // We need this to include in Profile page our own tweets``\n        if(profile){\n          query.equalTo(\"tweeterAcc\", account)\n        }\n        const results = await query.find()\n\n        settweetArr(results)\n        // console.log(results);\n      }catch(error){\n        console.log(error.message);\n      }\n    }\n    getTweets()\n  }, [profile, Moralis, account]);\n  \n\n  return (\n    <>\n\n      {tweetArr?.map((e, i) => {return(\n        <div key={i}>\n          <div  className=\"feedTweet\">\n            <img src={e.attributes.tweeterPfp ? e.attributes.tweeterPfp : defaultImgs[0] } alt={\"Profile pic\"} className=\"profilePic\"/>\n            <div className=\"completeTweet\">\n              <div className=\"who\">\n                {e.attributes.tweeterUserName.slice(0,6)}\n                <div className=\"accWhen\">\n                  {`${e.attributes.tweeterAcc.slice(0,4)}...${e.attributes.tweeterAcc.slice(38)} -\n                  ${e.attributes.createdAt.toLocaleString('en-us', { month: 'short'})}\n                  ${e.attributes.createdAt.toLocaleString('en-us', { day: 'numeric'})}                \n                  `}\n                </div>\n              </div>\n              <div className=\"tweetContent\">\n                  {e.attributes.tweetTxt}\n                  {e.attributes.tweetImg && (\n                  <img src={e.attributes.tweetImg} alt={`Img: ${i}`} className=\"tweetImg\" />\n                  )}\n                </div>\n\n\n              <div className=\"interactions\">\n                <div className=\"interactionsNums\">\n                  <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\"></Icon>\n                </div>\n                <div className=\"interactionsNums\">\n                  <Icon fill=\"#3f3f3f\" size={20} svg=\"star\"></Icon>\n                  12\n                </div>        \n                <div className=\"interactionsNums\">\n                  <Icon fill=\"#3f3f3f\" size={20} svg=\"avax\"></Icon>\n                </div>\n              </div>\n            </div>\n          </div>      \n        </div>\n      )}).reverse()\n\n      }\n\n      {/* <div className=\"feedTweet\">\n\n\n        <img src={defaultImgs[0]} className=\"profilePic\"/>\n        <div className=\"completeTweet\">\n          <div className=\"who\">\n            Juhizzz\n            <div className=\"accWhen\">0x42..38  - 1h</div>\n          </div>\n          <div className=\"tweetContent\">\n            Nice day programming some stuff\n            <img src={golf} className=\"tweetImg\" />\n          </div>\n\n\n          <div className=\"interactions\">\n            <div className=\"interactionsNums\">\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\"></Icon>\n            </div>\n            <div className=\"interactionsNums\">\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"star\"></Icon>\n              12\n            </div>        \n            <div className=\"interactionsNums\">\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"avax\"></Icon>\n            </div>\n          </div>\n        </div>\n      </div> */}\n    </>\n  );\n};\n\nexport default TweetInFeed;\n\n","import React from \"react\";\nimport { useState, useRef } from \"react\";\nimport { Icon, TextArea } from \"web3uikit\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport  TweetInFeed  from \"../components/TweetInFeed\"\nimport \"./Home.css\";\nimport { useMoralis, useWeb3ExecuteFunction } from \"react-moralis\";\n\n\nconst Home = () => {\n\n  const {Moralis} = useMoralis()\n  const user = Moralis.User.current()\n\n// Execution function to interact with your smart contract\n  const contractProcessor = useWeb3ExecuteFunction()\n\n  const inputFileRef = useRef(null)\n  const [selectedFile, setSelectedFile] = useState()\n  const [theFile, settheFile] = useState();\n  const [tweet, settweet] = useState();\n\n  const avalancheTweet = async () => {\n\n    if(!tweet) return;\n\n    let img;\n    console.log(theFile);\n    if(theFile){\n      const data = theFile\n      const file = new Moralis.File(data.name, data)\n      await file.saveIPFS()\n      img = file.ipfs()\n    }else{\n      img = \"No img\"\n    }\n\n    let options = {\n      contractAddress: \"0x4E87832300362e72861cd61476857319395Ed03f\",\n      functionName: \"addTweet\",\n      abi: [{\n          \"inputs\": [\n            {\n              \"internalType\": \"string\",\n              \"name\": \"tweetTxt\",\n              \"type\": \"string\"\n            },\n            {\n              \"internalType\": \"string\",\n              \"name\": \"tweetImg\",\n              \"type\": \"string\"\n            }\n          ],\n          \"name\": \"addTweet\",\n          \"outputs\": [],\n          \"stateMutability\": \"payable\",\n          \"type\": \"function\"\n        }],\n        params: {\n          tweetTxt: tweet,\n          tweetImg: img,\n        },\n        msgValue: Moralis.Units.ETH(1)\n    }\n\n    await contractProcessor.fetch({\n      params: options,\n      onSuccess: () => {\n        saveTweet()\n      },\n      onError: (error) => {\n        console.log(error.data.message);\n      }\n    });\n\n  }\n\n\n  const saveTweet = async () => {\n    if(!tweet){\n      return\n    }\n\n    const Tweets = Moralis.Object.extend(\"Tweets\")\n\n    const newTweet = new Tweets()\n\n    newTweet.set(\"tweetTxt\", tweet)\n    newTweet.set(\"tweeterPfp\", user.attributes.pfp)\n    newTweet.set(\"tweeterAcc\", user.attributes.ethAddress)\n    newTweet.set(\"tweeterUserName\", user.attributes.username)\n\n    if(theFile){\n      const data = theFile\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS()\n      newTweet.set(\"tweetImg\", file.ipfs())\n    }\n\n    await newTweet.save()\n    window.location.reload()\n\n  }\n\n\n  const chageHandler = (event) => {\n    const img = event.target.files[0];\n    settheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n\n  }\n\n  const onImageClick = () => {\n    inputFileRef.current.click();\n  } \n\n  return (\n    <>\n      <div className=\"mainContent\">\n\n        <div className=\"profileTweet\">\n          <img\n            src={ user.attributes.pfp ? user.attributes.pfp : defaultImgs[0]}\n            className=\"profilePic\"\n            alt=\"profileTweet\"\n          >\n          </img>\n\n\n          <div className=\"tweetBox\">\n\n            <TextArea\n              label=\"\"\n              name=\"tweetTxtArea\"\n              value=\"GM World\"\n              type=\"text\"\n              width=\"95%\"\n              onChange={e => settweet(e.target.value)}\n            ></TextArea>\n            {selectedFile && (\n                <img src={selectedFile} className=\"tweetImg\" alt=\"tweetImg\"></img>\n            )}\n\n\n            <div className=\"imgOrTweet\">\n              <div className=\"imgDiv\" onClick={onImageClick}>\n                <input\n                  type=\"file\"\n                  name=\"file\"\n                  ref={inputFileRef}\n                  onChange={chageHandler}\n                  style={{display: \"none\"}}\n                ></input>\n                <Icon fill=\"white\" size={20} svg=\"image\"></Icon>\n              </div>\n              <div className=\"tweetOptions\">\n                <div className=\"tweet\" onClick={saveTweet}>\n                  Tweet\n                </div>\n                <div className=\"tweet\" style={{backgroundColor: \"red\"}} onClick={avalancheTweet }>\n                  <Icon fill=\"white\" size={20} svg=\"avax\"></Icon>\n                </div>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n        <TweetInFeed></TweetInFeed>\n        \n\n      </div>  \n            \n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport './Profile.css';\nimport TweetInFeed from \"../components/TweetInFeed\"\nimport { useMoralis } from \"react-moralis\";\n\n\n\nconst Profile = () => {\n  \n  const {Moralis} = useMoralis()\n  const user = Moralis.User.current()\n\n  return (\n    <>\n     <div className=\"pageIdentify\"> Profile</div>\n     <img className=\"profileBanner\" alt=\"profile\" src={ user.attributes.banner ? user.attributes.banner :  defaultImgs[1]} />\n\n     <div className=\"pfpContainer\">\n       <img src={ user.attributes.pfp ? user.attributes.pfp :  defaultImgs[0]} className=\"profilePFP\" alt=\"attributes\"/>\n       <div className=\"profileName\">{user.attributes.username.slice(0,6)}</div>\n       <div className=\"profileWallet\">{`${user.attributes.ethAddress.slice(0,4)}...\n          ${user.attributes.ethAddress.slice(38)}`}</div>\n       <Link to=\"/settings\">\n         <div className=\"profileEdit\">Edit profile</div>\n       </Link>\n       <div className=\"profileBio\">\n         { user.attributes.bio ? user.attributes.bio :  \"Your average Web3 Mage\"}\n         Your average Web3 Mage\n       </div>\n       <div className=\"profileTabs\">\n         <div className=\"profileTab\">\n           Your tweets\n         </div>\n       </div>\n     </div>\n\n     <TweetInFeed profile={true}></TweetInFeed>\n    </>\n  );\n};\n\nexport default Profile;\n\n","export default __webpack_public_path__ + \"static/media/pfp1.394c20a6.png\";","export default __webpack_public_path__ + \"static/media/pfp2.77db00e7.png\";","export default __webpack_public_path__ + \"static/media/pfp3.63c3a335.png\";","export default __webpack_public_path__ + \"static/media/pfp4.b4e70662.png\";","export default __webpack_public_path__ + \"static/media/pfp5.ba3d30f6.png\";","import React from \"react\";\nimport { Input } from \"web3uikit\";\nimport './Settings.css';\n// Images used for the NFTS\nimport pfp1 from \"../images/pfp1.png\"\nimport pfp2 from \"../images/pfp2.png\"\nimport pfp3 from \"../images/pfp3.png\"\nimport pfp4 from \"../images/pfp4.png\"\nimport pfp5 from \"../images/pfp5.png\"\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\nimport { useEffect } from \"react\";\n// import Web3Api from \"moralis/types/generated/web3Api\";\n\n\nconst Settings = () => {\n\n  const [selectedPFP, setSelectedPFP] = useState()\n  const inputFile = useRef(null)\n  const [selectedImage, setselectedImage] = useState(defaultImgs[1]);\n  const [theFile, settheFile] = useState();\n  const [userName, setuserName] = useState();\n  const [bio, setbio] = useState();\n  const { Moralis, isAuthenticated, account } = useMoralis();\n  const Web3API = useMoralisWeb3Api();\n  const [pfps, setPfps] = useState([])\n\n  const pfpsDefault = [pfp1, pfp2, pfp3, pfp4, pfp5]\n\n\n\n  const resolveLink = (url) => {\n    if(!url || !url.includes(\"ipfs://\")) return url\n    return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\")\n  }\n\n  useEffect(() => {\n\n    const fetchNFTs = async () => {\n\n      console.log(\"Entre1\");\n\n      const options = {\n        chain: \"fuji\",\n        address: \"account\"\n      }\n      console.log(\"Entre2\");\n\n      \n      const mumbaiNFTs = await Web3API.account.getNFTs(options)\n      const images = mumbaiNFTs.result.map(\n        (e) => resolveLink(JSON.parse(e.metadata)?.image)\n      );\n      \n      setPfps(images)\n    }\n\n    // Web3Api.account.getNFTs()\n    // Web3API.account.getNFTs\n\n    fetchNFTs()\n    \n  }, [isAuthenticated, account, Web3API]);\n  \n\n  //functions for saving the image NFT\n  \n  const chageHandler = (event) => {\n    const img = event.target.files[0];\n    settheFile(img)\n    setselectedImage(URL.createObjectURL(img));\n  }\n\n// Save the information in Moralis\n  const saveEdits = async () => {\n    const User = Moralis.Object.extend(\"_User\")\n    const query = new Moralis.Query(User)\n    const myDetails = await query.first();\n\n    if(bio){\n      myDetails.set(\"bio\", bio)\n    }\n\n    if(selectedPFP){\n      myDetails.set(\"pfp\", selectedPFP)\n    }\n\n    if(userName){\n      myDetails.set(\"username\", userName)\n    }\n\n    if(theFile){\n      const data = theFile\n      const file = new Moralis.File(data.name, data)\n      await file.saveIPFS()\n      myDetails.set(\"banner\", file.ipfs())\n    }\n\n    await myDetails.save()\n    window.location.reload()\n\n  }\n\n  const onBannerClick = () => {\n    inputFile.current.click();\n  }\n\n  return (\n    <>\n      <div className=\"pageIdentify\"> Settings</div>\n      <div className=\"settingsPage\">\n        <Input\n          label=\"Name\"\n          name=\"NameChange\"\n          width=\"100%\"\n          labelBgColor=\"#141d26\"\n          onChange={(e) => setuserName(e.target.value) }\n        ></Input>\n        <Input\n          label=\"Bio\"\n          name=\"bioChange\"\n          width=\"100%\"\n          labelBgColor=\"#141d26\"\n          onChange={(e) => setbio(e.target.value)}\n        ></Input>      \n\n        <div className=\"pfp\">\n          Profile Image (Your NFTs)\n          <div className=\"pfpOptions\">\n\n            {pfps ? pfps.map((e, i) => {\n                return(\n                  <>\n                    <img alt=\"img\" src={e}  className={selectedPFP === e ? \"pfpOptionSelected\" :\"pfpOption\"} onClick={() => setSelectedPFP(pfps[i])}/>\n                  </>\n                )\n              })\n              : pfpsDefault.map((e, i) => {\n                return(\n                  <>\n                    <img alt=\"img\" src={e}  className={selectedPFP === e ? \"pfpOptionSelected\" :\"pfpOption\"} onClick={() => setSelectedPFP(pfps[i])}/>\n                  </>\n                )\n              })\n            }\n          </div>\n        </div>\n\n{/* Frontend to save the image */}\n        <div className=\"pfp\">\n          Profile Banner\n          <div className=\"pfpOptions\">\n              <img \n                alt={selectedImage}\n                src={selectedImage}  \n                className=\"banner\"\n                onClick={onBannerClick}/>\n              <input\n                type=\"file\"\n                name=\"file\"\n                ref={inputFile}\n                onChange={chageHandler}\n                style={{display: \"none\"}}\n              ></input>\n          </div>\n        </div>\n\n        {/* ***********Missing saving functionality************ */}\n        <div className=\"save\" onClick={saveEdits}> \n          Save\n        </div>\n\n      </div>\n\n    </>\n  );\n};\n\nexport default Settings;\n\n","import React from \"react\";\nimport { useMoralis } from \"react-moralis\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"web3uikit\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport './Sidebar.css';\n\n\nconst Sidebar = () => {\n\n  const { Moralis } = useMoralis()\n  const user = Moralis.User.current()\n\n  return (\n    <>\n      <div className=\"siderContent\">\n        <div className=\"menu\">\n          <div className=\"details\">\n          <Icon fill=\"#ffffff\" size={33} svg=\"twitter\"></Icon>\n          </div>\n\n          <Link to=\"/\" className=\"link\">\n            <div className=\"menuItems\">\n              <Icon fill=\"#ffffff\" size={33} svg=\"list\"></Icon>\n              Home\n            </div>\n          </Link>\n\n          <Link to=\"/profile\" className=\"link\">\n            <div className=\"menuItems\">\n              <Icon fill=\"#ffffff\" size={33} svg=\"user\"></Icon>\n              Profile\n            </div>\n          </Link>\n          \n          <Link to=\"settings\" className=\"link\">\n            <div className=\"menuItems\">\n              <Icon fill=\"#ffffff\" size={33} svg=\"cog\"></Icon>\n              Settings\n            </div>\n          </Link>\n\n        </div>\n\n            <div className=\"details\">\n              <img src={ user.attributes.pfp ? user.attributes.pfp :  defaultImgs[0]} className=\"profilePic\" alt=\"image1\"/>\n              <div className=\"profile\">\n                <div className=\"who\">{user.attributes.username.slice(0,6)}</div>\n                <div className=\"accWhen\">{`${user.attributes.ethAddress.slice(0,4)}... ${user.attributes.ethAddress.slice(38)}`}</div>\n              </div>\n\n        </div>\n\n\n      </div>\n    </>\n  );\n};\n\nexport default Sidebar;\n\n","export default __webpack_public_path__ + \"static/media/spaceshooter.efac87b8.jpeg\";","export default __webpack_public_path__ + \"static/media/netflix.411c7033.jpeg\";","export default __webpack_public_path__ + \"static/media/academy.c7a89823.png\";","export default __webpack_public_path__ + \"static/media/youtube.afdf35e4.png\";","export default __webpack_public_path__ + \"static/media/js.33c19307.png\";","import React from \"react\";\nimport './Rightbar.css';\nimport spaceshooter from \"../images/spaceshooter.jpeg\";\nimport netflix from \"../images/netflix.jpeg\";\nimport academy from \"../images/academy.png\";\nimport youtube from \"../images/youtube.png\";\nimport js from \"../images/js.png\";\nimport { Input } from \"web3uikit\";\n\n\nconst Rightbar = () => {\n  const trends = [\n    {\n      img: spaceshooter,\n      text: \"Learn how to build a Web3 FPS game using unity...\",\n      link: \"https://moralis.io/moralis-projects-learn-to-build-a-web3-space-fps-game/\",\n    },\n    {\n      img: netflix,\n      text: \"The fisrt Moralis Project! Let's Netflix and chill...\",\n      link: \"https://moralis.io/moralis-projects-learn-to-build-a-web3-netflix-clone/\",\n    },\n    {\n      img: academy,\n      text: \"Master DeFi in 2022. Start  at the Moralis Academy...\",\n      link: \"https://academy.moralis.io/courses/defi-101\",\n    },\n    {\n      img: js,\n      text: \"Become a Web3 Developer with just simple JS...\",\n      link: \"https://academy.moralis.io/all-courses\",\n    },\n    {\n      img: youtube,\n      text: \"Best youtube channel to learn about Web3...\",\n      link: \"https://www.youtube.com/channel/UCgWS9Q3P5AxCWyQLT2kQhBw\",\n    },\n  ];\n\n  return (\n    <>\n\n      <div className=\"rightbarContent\">\n        <Input\n          label=\"Search Twitter\"\n          name=\"Search Twitter\"\n          prefixIcon=\"search\"\n          labelBgColor=\"#141d26\"\n        ></Input>\n\n        <div className=\"trends\">\n            News for you\n             \n            {\n              trends.map((e) => {\n                return (\n                  <div key={e.img} className=\"trend\" onClick={() => window.open(e.link)}>\n                    <img src={e.img} alt={e.img} className=\"trendImg\"/>\n                    <div className=\"trendText\">{e.text}</div>\n                  </div>\n                )\n              })\n            }\n                \n        </div>\n      </div>\n\n    </>\n  );\n};\n\nexport default Rightbar;\n\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\";\nimport Settings from \"./pages/Settings\";\nimport \"./App.css\";\nimport Sidebar from \"./components/Sidebar\";\nimport Rightbar from \"./components/Rightbar\";\nimport { useMoralis } from \"react-moralis\";\nimport { ConnectButton, Icon } from \"web3uikit\";\n\nconst App = () => {\n\n  const {isAuthenticated, Moralis} = useMoralis();\n\n\n  return (\n    <>\n    {isAuthenticated ? (\n      <div className=\"page\">\n        <div className=\"sideBar\"> \n        <Sidebar></Sidebar>\n        <div className=\"logout\"\n          onClick={() => {\n            Moralis.User.logOut().then(() => {\n              window.location.reload()\n            })\n          }}\n        >\n          Logout\n        </div>\n        </div>\n            <div className=\"mainWindow\">\n              <Routes>\n                <Route path=\"/\" element={<Home />} />\n                <Route path=\"/profile\" element={<Profile />} />\n                <Route path=\"/settings\" element={<Settings />} />\n              </Routes>\n            </div>\n            <Rightbar></Rightbar>\n      </div> \n    ) :(\n      <div className=\"loginPage\">\n        <Icon fill=\"#ffffff\" size={40} svg=\"twitter\"></Icon>\n        <ConnectButton></ConnectButton>\n      </div>\n    )}\n\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { MoralisProvider } from \"react-moralis\";\nimport { NotificationProvider } from 'web3uikit';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <MoralisProvider appId=\"OZTcnQSh2IZBITP0LfPGZkwDLg2sasi4Zfl87Aqv\" serverUrl=\"https://4kmg45hxqm7w.usemoralis.com:2053/server\">\n      <NotificationProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      </NotificationProvider>\n    </MoralisProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}